\documentclass[journal]{vgtc}                % final (journal style)
%\documentclass[review,journal]{vgtc}         % review (journal style)
%\documentclass[widereview]{vgtc}             % wide-spaced review
%\documentclass[preprint,journal]{vgtc}       % preprint (journal style)
%\documentclass[electronic,journal]{vgtc}     % electronic version, journal

%% Uncomment one of the lines above depending on where your paper is
%% in the conference process. ``review'' and ``widereview'' are for review
%% submission, ``preprint'' is for pre-publication, and the final version
%% doesn't use a specific qualifier. Further, ``electronic'' includes
%% hyperreferences for more convenient online viewing.

%% Please use one of the ``review'' options in combination with the
%% assigned online id (see below) ONLY if your paper uses a double blind
%% review process. Some conferences, like IEEE Vis and InfoVis, have NOT
%% in the past.

%% Please note that the use of figures other than the optional teaser is not permitted on the first page
%% of the journal version.  Figures should begin on the second page and be
%% in CMYK or Grey scale format, otherwise, colour shifting may occur
%% during the printing process.  Papers submitted with figures other than the optional teaser on the
%% first page will be refused.

%% These three lines bring in essential packages: ``mathptmx'' for Type 1
%% typefaces, ``graphicx'' for inclusion of EPS figures. and ``times''
%% for proper handling of the times font family.

\usepackage{mathptmx}
\usepackage{graphicx}
\usepackage{times}
%\usepackage[font=small,skip=0pt]{caption}
\usepackage[font=small,skip=5pt]{caption}

%% We encourage the use of mathptmx for consistent usage of times font
%% throughout the proceedings. However, if you encounter conflicts
%% with other math-related packages, you may want to disable it.

%% This turns references into clickable hyperlinks.
\usepackage[bookmarks,backref=true,linkcolor=black]{hyperref} %,colorlinks
\hypersetup{
  pdfauthor = {},
  pdftitle = {},
  pdfsubject = {},
  pdfkeywords = {},
  colorlinks=true,
  linkcolor= black,
  citecolor= black,
  pageanchor=true,
  urlcolor = black,
  plainpages = false,
  linktocpage
}

%% If you are submitting a paper to a conference for review with a double
%% blind reviewing process, please replace the value ``0'' below with your
%% OnlineID. Otherwise, you may safely leave it at ``0''.
\onlineid{0}

%% declare the category of your paper, only shown in review mode
\vgtccategory{Research}

%% allow for this line if you want the electronic option to work properly
\vgtcinsertpkg

%% In preprint mode you may define your own headline.
%\preprinttext{To appear in IEEE Transactions on Visualization and Computer Graphics.}

%% Paper title.

\title{On the move at DinoFun World}

%% This is how authors are specified in the journal style

%% indicate IEEE Member or Student Member in form indicated below
\author{Heike Hofmann, \textit{Member, IEEE}, Dianne Cook, Andee Kaplan, Eric Hare and Vianey Leos-Barajas}
\authorfooter{
%% insert punctuation at end of each item
\item
 Heike Hofmann, Andee Kaplan, Eric Hare, and Vianey  Leos-Barajas are with the Department of Statistics, Iowa State University. E-mail: \{hofmann, ajkaplan, erichare, vianey\}@iastate.edu.
\item
 Dianne Cook is with the Department of Econometrics and Business Statistics, Monash University. E-mail: dicook@monash.edu.
 }

%other entries to be set up for journal
\shortauthortitle{Hofmann \MakeLowercase{\textit{et al.}}: On the move}
%\shortauthortitle{Firstauthor \MakeLowercase{\textit{et al.}}: Paper Title}

% %% Abstract section.
% \abstract{Here goes the abstract.
% } % end of abstract

%% Keywords that describe your work. Will show as 'Index Terms' in journal
%% please capitalize first letter and insert punctuation after last keyword
\keywords{Keywords that describe your work. Will show as 'Index Terms' in journal
 please capitalize first letter and insert punctuation after last keyword}

%% ACM Computing Classification System (CCS). 
%% See <http://www.acm.org/class/1998/> for details.
%% The ``\CCScat'' command takes four arguments.

\CCScatlist{ % not used in journal version
 \CCScat{K.6.1}{Management of Computing and Information Systems}%
{Project and People Management}{Life Cycle};
 \CCScat{K.7.m}{The Computing Profession}{Miscellaneous}{Ethics}
}




%% Uncomment below to include a teaser figure.
   \teaser{
    \centering
    \includegraphics[width=.65\linewidth]{figure/vandals-1.pdf}
   \caption{\label{fig:vandals} On Sunday, June 8 2014 a trio of suspects (marked in orange) checks in to Creighton Pavilion at 9:01 am and stays there for more than 2 hour, in particular during the time that the Pavilion is closed to the public. What are they doing there? Our working theory is that some vandalism took place during this time, forcing park authorities to close the pavilion for the rest of the day. }
  }

%% Uncomment below to disable the manuscript note
%\renewcommand{\manuscriptnotetxt}{}

%% Copyright space is enabled by default as required by guidelines.
%% It is disabled by the 'review' option or via the following command:
% \nocopyrightspace

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%% START OF THE PAPER %%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}

%% The ``\maketitle'' command must be the first command after the
%% ``\begin{document}'' command. It prepares and prints the title block.

%% the only exception to this rule is the \firstsection command
\firstsection{Data Manipulation}
\maketitle
<<setup, cache=FALSE, echo=FALSE, results='hide', message=FALSE, warning=FALSE>>=
library(readr)
library(lubridate)
library(dplyr)
library(ggplot2)
library(jpeg)
library(ggmap)
library(grid)
@

<<readdata, cache=TRUE, echo=FALSE, results='hide', message=FALSE, warning=FALSE>>=
fri <- read_csv("data/park-movement-Fri-FIXED-2.0.csv", col_types = list(
  Timestamp = col_character()))
sat <- read_csv("data/park-movement-Sat.csv", col_types = list(
  Timestamp = col_character()))
sun <- read_csv("data/park-movement-Sun.csv", col_types = list(
  Timestamp = col_character()))
move <- rbind(fri, sat, sun)
rm(fri, sat, sun)

move$Timestamp <- ymd_hms(move$Timestamp)
move$day <- wday(move$Timestamp, label=TRUE)
move$hour <- as.numeric(hour(move$Timestamp))
move$min <- as.numeric(minute(move$Timestamp))
move <- subset(move, !is.na(day))
move$day <- factor(move$day, levels=c("Fri", "Sat", "Sun"))

movebymin <- move %>% group_by(day, hour, min, type) %>% summarize(n=n())
@

The data set under consideration comes from the VAST 2015 Mini-Challenge~1 consisting of movements of park goers at DinoFun World, a fictitious medium-sized amusement park, for the weekend of June 8-10, 2014. Each record in the data consists of an identifier, timestamp, X-Y location, and the type of movement, distinguishing check-ins into an attraction and movements  within $5m \times 5m$ grid cells measured by sensors along the park's pathways.

Our results are based on data augmented by more detailed location information and timelines derived from individuals' movements through the park:


For the time spent in rides (section~\ref{sec:rides})  we focus on just the check-in events enhanced by location-based auxiliary information given  on the DinoFun World website, which allows us to matchup each check-in with the corresponding attraction; its location, name and classification as Kiddie Ride, Thrill Ride or Ride for Everybody. We further derive the time that park-goers spend in an attraction as the time between check-in and first recorded movement afterwards.

The time of park-goers' first movement after a check-in event is also important in identifying when rides at each attraction occur (see section~\ref{sec:groups}). We use the time of the first movement as a potential end time of a ride. For most rides, these end times show huge frequency spikes at regular intervals, indicating both the end of a ride and giving some indication how long each is lasting. 

\section{Results}

\begin{figure}[hbt]
<<overview-moves, dependson='readdata', echo=FALSE, fig.width=9, fig.height=8, out.width='\\columnwidth', cache=TRUE, results='asis'>>=
rects <- data.frame(ymax=25000, xmin=20+12/60, xmax=24, ymin=-100, day="Fri")
sjrects <- data.frame(ymax=25000, xmin=15, xmax=16, ymin=-100, day=c("Fri", "Sat"))
showrects <- data.frame(ymax=25000, xmin=c(10, 15, 10), xmax=c(11, 16, 11), ymin=-100, day=c("Sat", "Sat", "Sun"))
#noshowrects <- data.frame(ymax=25000, xmin=15, xmax=16, ymin=-100, day="Sun")

scottjones <- movebymin %>% filter(type=="movement") %>% 
  group_by(day, hour) %>% 
  summarize(sc=mean(n))

ggplot(data=subset(movebymin, type=="movement")) + theme_bw() + 
  geom_rect(aes(ymax=25000, ymin=-100, xmin=10, xmax=11), 
            fill="grey93", alpha=0.8) +
#  geom_rect(aes(ymax=ymax, ymin=ymin, xmin=xmin, xmax=xmax), 
#            fill="grey90", alpha=0.5, data=rects) +
  geom_rect(aes(ymax=ymax, ymin=ymin, xmin=xmin, xmax=xmax), 
            fill="grey90", alpha=0.8, data=sjrects) +
  geom_text(aes(label="Scott Jones Show\nin concert space",
           x = 10.5, y=16500,  day=day), angle = 90,
           colour="grey70", size=4, data=rects) +
  geom_text(aes(label="Scott Jones Show\nin concert space",
           x = 15.5, y=16500,  day=day), angle = 90,
           colour="grey70", size=4, data=rects) +
#  geom_text(aes(label="show",
#           x = (xmin+xmax)/2, y=5000,  day=day), 
#           colour="grey70", size=5, data=showrects) +
#  geom_text(aes(label="no show",
#           x = (xmin+xmax)/2, y=5000,  day=day), 
#           colour="grey70", size=5, data=noshowrects) +
#  geom_text(aes(label="no movements\nrecorded\nin first version",
#           x = (xmin+xmax)/2, y=12000,  day=day), angle = 90,
#           colour="grey70", size=5, data=rects) +
  facet_grid(day~.) + 
  geom_point(aes(x=hour+min/60, y=n), alpha=0.5) + 
  geom_segment(aes(y=sc, yend=sc, x=hour, xend=hour+1), 
               data=subset(scottjones, hour %in% c(9:11, 14:16)),
               colour="darkorange2", size=1.5, alpha=0.8) + 
  scale_x_continuous(breaks=8:24, labels=paste(c(8:12,1:12), c(rep("am", 4), rep("pm", 12), "am"))) + 
  xlab("Time of the day") + 
  ylab("Number of movements by minute") + theme_bw() +
  theme(plot.margin=unit(c(0,0,0,0), "cm")) + 
  ggtitle("The second Scott Jones show on Sunday got cancelled")
@
\caption{\label{fig:movebymin} Number of movements in DinoFun World by minute. The Scott Jones show is responsible for a lot of the movement in the park over the weekend.}
\end{figure}
Overall attendance at DinoFun World is characterized in figure~\ref{fig:movebymin}. The number of moves  park goers make is charted for each minute of the day along  a horizontal time axis. We can learn a couple of things from this plot: 

(1) the Scott Jones show was held from 10 to 11 during all mornings and from 3 to 4 in the afternoons of Friday and Saturday. We can see this from the dip in movements (orange lines are average number of moves during one hour) during this time, and the spikes immediately at the end of the show (when a lot of people move out of the area).
The second show on Sunday was cancelled: the dip in movements is missing on Sunday afternoon. This is also visible in figure 2, showing check-ins by area: people check into the concert space before 10 am for all days but before 3 pm only on Friday and Saturday.

(2) there is a spike in movements on Sunday at around 2:30 pm - judging from the movement pattern these are people on their way to the Scott Jones show who get turned away (because there are no check-ins to the concert space), see also figure 3.

\subsection{Time in Rides}\label{sec:rides}

<<checkins, dependson='readdata', echo=FALSE, cache=TRUE>>=
moveplus <- move[order(move$day, move$id, move$Timestamp),]
moveplus$timespent <- c(as.numeric(diff(moveplus$Timestamp)), NA)
moveplus$timespent[moveplus$timespent < 0] <- NA

park <- read.csv("data/park.csv")
checkins <- merge(subset(moveplus, type=="check-in"), park, by=c("X", "Y"), all=T)
checkins$dmin <- with(checkins, hour*60+min)
@

\begin{figure}
<<timeinthrill, dependson='checkins', echo=FALSE, fig.width=12, fig.height=12, out.width='\\columnwidth', cache=TRUE, results='asis'>>=
checkinsplus <- subset(checkins, Type=="Thrill Rides" & day %in% c("Fri", "Sun"))
checkinsplus$real <- TRUE
thrilllimits <- data.frame(timespent=c(10,18,18)*60, day="Fri", 
       Name=c("Atmosfear", "Keimosaurus Big Spin", "Wrightiraptor Mountain"),
       dmin=480, real=FALSE)

checkinsplus <- rbind(checkinsplus[, c("day", "dmin", "timespent", "Name", "real")], 
thrilllimits)
checkinsplus$Namelabel <- gsub(" ", "\n", as.character(checkinsplus$Name))
checkinsplus$Namelabel <- gsub("Keimosaurus\nBig\nSpin", "Keimosaurus\nBig Spin", as.character(checkinsplus$Namelabel))
checkinsplus$Namelabel <- gsub("of\nthe", "of the", as.character(checkinsplus$Namelabel))

ggplot(data=checkinsplus) +
  geom_errorbarh(aes(x=dmin/60, xmin=dmin/60,
                     xmax=(dmin+timespent/60)/60, 
                     y=timespent/60, colour=Name), alpha=1/2, size=2) + 
  theme_bw() + facet_grid(Namelabel~day, scales="free", space="free") + 
  theme(strip.text.y = element_text(angle = 0)) + 
  scale_x_continuous("Time of the day", breaks=8:23, 
                     labels=paste(c(8:12,1:11), c(rep("am", 4), rep("pm", 12)))) + 
  ggtitle("Time spent in Thrill Rides") + 
  ylab("Time spent in Ride (includes waiting time)") + 
  scale_colour_brewer("Ride", palette="Paired") +
  theme(legend.position="bottom") + 
  theme(plot.margin=unit(c(0,0,0,0), "cm")) + 
  guides(colour = guide_legend(override.aes = list(alpha = 1),  nrow=2)) 
@
\caption{\label{fig:timeinthrill} Time spent in each of the Thrill Rides on Friday and Sunday. Each park goer is a line, the length on the line and its vertical position indicate how much time was spend in each ride.}
\end{figure}

Fig~\ref{fig:timeinthrill} shows operating times of each of the thrill rides: on the right time of day is shown, along the y-axis, the amount of time spent in a ride. Operating time is shown as a line, each line corresponds to one individual in a ride. The longer the line, the longer an individual spent in the ride. This includes waiting times after checking into the ride. It is obvious, that rides are much busier on Sunday. On weekend days park goers have to calculate to take one hour for one ride of the Flight of the Swingodon, whereas they can manage about 3-4 rides an hour of the Flight of the Swingodon on Friday. The pattern of ‘droplets’ under each of the thick lines indicate people who have checked into a ride, but leave before it is their turn to take it. Just before 3pm on Sunday, a lot of these droplets occur across all the backed up thrill rides - maybe these people want to go to the (by now cancelled) Scott Jones show? DinoFun needs to work on their general announcement system!


\subsection{Barcode of activities}\label{sec:groups}
We  define a group as a set of people who does the same rides together. 

We exclude any of the rides that are potentially walk-throughs: Atmosfear, Galactosaurus Rage and Dykesadactyl Thrill. Beyond that we include all of the Thrill Rides, Kiddie Rides and Rides for Everyone.

For each of the days of the time frame we create a binary matrix of park goer id and ride id, where a  1 in cell (i,j) indicating that park goer i was on ride j. 
We then use a binary metric to calculate pairwise distances between two park goers as the proportion of rides that only one of the two individuals took and the total number of rides that at least one of them did. This yields a distance between 0 and 1, where 0 means that all rides where done jointly, and 1 that none of the rides was done together.

For example, if individual k took 23 rides, and $\ell$ did 25 rides, and they did 20 rides of these together, the ride based distance between them is (28 - 20)/28 = 0.29. 

Using Ward's method for a hierarchical clustering based on these participant-participant distances, we identify groups of park-goers. 

Figure~\ref{fig:groups} shows a sample of several groups going on rides together on Saturday. 
<<groupsdata, cache=TRUE, echo=FALSE>>=
checkinsgr <- read.csv("data/checkinsgr.csv")
checkinsgr$Timestamp <- ymd_hms(checkinsgr$Timestamp)
checkinsgr$id <- reorder(checkinsgr$id, checkinsgr$group, mean)
@

\begin{figure}
<<groups, echo=FALSE, dependson='groupsdata', fig.width=10, fig.height=9.5, out.width='\\columnwidth', results='asis'>>=
checkinsgr$dmin <- with(checkinsgr, (hour*60+min)/60)
qplot(x=dmin, xend=dmin+timespent/60^2, y=id, yend=id, data=subset(checkinsgr, day=="Sat" & group %in% c(483, 1185, 1323, 1705, 1566, 1819, 1838)), colour=Type,geom="segment", size=I(3)) +  theme_bw() + scale_colour_brewer(palette="Paired") +
  facet_grid(facets=group~.,space="free", scales="free_y") + ggtitle("Some Saturday groups: a couple of random groups and the two largest groups") + theme(legend.position="bottom") + ylab("") + guides(colour = guide_legend(nrow=2)) + 
  geom_text(aes(x=dmin+timespent/(2*60^2), y=id, label=Name), colour="grey30", angle=90, data=subset(checkinsgr, id %in% c(1333734, 759761)), size=3.5) +
  theme(plot.margin=unit(c(0,0,0,0), "cm")) +   
  scale_x_continuous("Time of the day", breaks=8:23, 
                    labels=paste(c(8:12,1:11), c(rep("am", 4), rep("pm", 12))))

# qplot(x=Timestamp, xend=Timestamp+timespent, y=id, yend=id, data=subset(checkinsgr, day=="Sat" & group %in% sample(size=15, x=unique(checkinsgr$group))), colour=Type,geom="segment", size=I(3)) +  theme_bw() + scale_colour_brewer(palette="Paired") +
#     facet_grid(facets=group~.,space="free", scales="free_y") + ggtitle("Four Saturday groups: two groups of four and the two largest groups") + theme(legend.position="bottom") + ylab("") + guides(colour = guide_legend(nrow=2)) 

@
\caption{\label{fig:groups}Each group is uniquely identified by the activities they do together. For each individual coloured horizontal lines are drawn from the time of check-in to the time he/she leaves an attraction. Groups of individuals doing the same activities then result in vertical stripes. }
\end{figure}


\subsection{Vandals in Creighton Park}

Figure~\ref{fig:vandals} is constructed similarly to figure~\ref{fig:timeinthrill}, but focuses on the time that park goers spend in Creighton Pavilion, which hosts the Scott Jones exhibit, and at the Scott Jones show in the concert space. Besides the occasional individual, who spend almost all day in the concert space (security personnel should really check on these guys to see that they are OK), there are three suspicious individuals who check into the Creighton Pavilion and spend almost two hours all by themselves.

<<vandalsdata, dependson='checkins', echo=FALSE, cache=TRUE>>=
vandals <- subset(checkins, Type=="Shows & Entertainment" & timespent > 6000)
vandals$hm <- with(vandals, paste(hour(Timestamp), minute(Timestamp), sep=":"))
vandals2 <- vandals %>% group_by(hm) %>% mutate(label=paste(id, sep=",", collapse=", "))
scott <- subset(checkins, Name %in% c("concert space", "Creighton Pavilion"))
@

% turn evaluation on when you first run the script.
<<vandals, dependson='vandalsdata', echo=FALSE, results='hide', fig.keep=FALSE, fig.width=11, fig.height=5.25, eval=FALSE>>=
firstrect <- data.frame(xmin=9.5, xmax=11.5, ymin=0, ymax=200, day=c("Fri", "Sat", "Sun"))
secondrect <- data.frame(xmin=14.5, xmax=16.5, ymin=0, ymax=200, day=c("Fri", "Sat"))
ggplot(data=scott) +
  geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey90", 
            data=firstrect) +
  geom_rect(aes(xmin=xmin+0.5, xmax=xmax-0.5, ymin=ymin, ymax=ymax), fill="grey85", 
            data=firstrect) +
  geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey90", 
            data=secondrect) +
  geom_rect(aes(xmin=xmin+0.5, xmax=xmax-0.5, ymin=ymin, ymax=ymax), fill="grey85", 
            data=secondrect) +
  geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="grey95", 
            data=data.frame(xmin=12, xmax=23, ymin=0, ymax=200, day="Sun")) +
  geom_errorbarh(aes(x=(hour*60+min)/60, xmin=(hour*60+min)/60,
                     xmax=(hour*60+min+timespent/60)/60, 
                     y=timespent/60, colour=Name), alpha=0.1, size=2) + 
  theme_bw() + facet_grid(day~.) + 
  geom_errorbarh(aes(x=(hour*60+min)/60, xmin=(hour*60+min)/60,
                     xmax=(hour*60+min+timespent/60)/60, 
                     y=timespent/60, colour=Name), size=2, alpha=1,
                 data=vandals) + 
  ylab("Time spent in Creighton Pavilion (in minutes)") + 
scale_x_continuous("Time of the day", breaks=8:23, labels=paste(c(8:12,1:11), c(rep("am", 4), rep("pm", 12)))) + 
  ggtitle("Vandals in the Creighton Pavilion") + 
  geom_text(aes(x=(hour*60+min)/60, y=timespent/60, 
                label=label), colour="#FC8D62", data=vandals2, hjust=-0.1, 
            vjust=1.4, alpha=1, size=3.75) + 
  geom_text(aes(x=x, y=y, label="Scott Jones\nshow"), colour="grey50", size=3,
            data=data.frame(x=10.5, y=160, day="Fri")) + 
  geom_text(aes(x=x, y=y, label="No admission to Creighton"), colour="grey65", size=3,
            data=data.frame(x=10.5, y=120, day="Fri")) + 
  geom_text(aes(x=x, y=y, label="Creighton Pavilion closed to the public"), colour="grey65", size=3,
            data=data.frame(x=17.5, y=100, day="Sun")) + 
  scale_colour_brewer("Location", palette="Set2") +
  theme(legend.justification=c(1,1), legend.position=c(1,1)) + guides(colour = guide_legend(override.aes = list(alpha = 1))) +
  theme(plot.margin=unit(c(0,0,0,0), "cm")) 
@



%% if specified like this the section will be committed in review mode
\acknowledgments{
The authors wish to thank everybody who makes the software R~\cite{R} possible, and in particular the authors of the packages knitr~\cite{knitr-package, knitr-book1}, ggplot2~\cite{ggplot2}, and dplyr~\cite{dplyr}.
}

\bibliographystyle{abbrv}
%%use following if all content of bibtex file should be shown
%\nocite{*}
\bibliography{mc1}
\end{document}

