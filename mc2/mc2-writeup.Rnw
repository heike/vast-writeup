\documentclass[journal]{vgtc}                % final (journal style)
%\documentclass[review,journal]{vgtc}         % review (journal style)
%\documentclass[widereview]{vgtc}             % wide-spaced review
%\documentclass[preprint,journal]{vgtc}       % preprint (journal style)
%\documentclass[electronic,journal]{vgtc}     % electronic version, journal

%% Uncomment one of the lines above depending on where your paper is
%% in the conference process. ``review'' and ``widereview'' are for review
%% submission, ``preprint'' is for pre-publication, and the final version
%% doesn't use a specific qualifier. Further, ``electronic'' includes
%% hyperreferences for more convenient online viewing.

%% Please use one of the ``review'' options in combination with the
%% assigned online id (see below) ONLY if your paper uses a double blind
%% review process. Some conferences, like IEEE Vis and InfoVis, have NOT
%% in the past.

%% Please note that the use of figures other than the optional teaser is not permitted on the first page
%% of the journal version.  Figures should begin on the second page and be
%% in CMYK or Grey scale format, otherwise, colour shifting may occur
%% during the printing process.  Papers submitted with figures other than the optional teaser on the
%% first page will be refused.

%% These three lines bring in essential packages: ``mathptmx'' for Type 1
%% typefaces, ``graphicx'' for inclusion of EPS figures. and ``times''
%% for proper handling of the times font family.

\usepackage{mathptmx}
\usepackage{graphicx}
\usepackage{times}
%\usepackage[font=small,skip=0pt]{caption}
\usepackage[font=small,skip=5pt]{caption}

%% We encourage the use of mathptmx for consistent usage of times font
%% throughout the proceedings. However, if you encounter conflicts
%% with other math-related packages, you may want to disable it.

%% This turns references into clickable hyperlinks.
\usepackage[bookmarks,backref=true,linkcolor=black]{hyperref} %,colorlinks
\hypersetup{
  pdfauthor = {},
  pdftitle = {},
  pdfsubject = {},
  pdfkeywords = {},
  colorlinks=true,
  linkcolor= black,
  citecolor= black,
  pageanchor=true,
  urlcolor = black,
  plainpages = false,
  linktocpage
}

%% If you are submitting a paper to a conference for review with a double
%% blind reviewing process, please replace the value ``0'' below with your
%% OnlineID. Otherwise, you may safely leave it at ``0''.
\onlineid{0}

%% declare the category of your paper, only shown in review mode
\vgtccategory{Research}

%% allow for this line if you want the electronic option to work properly
\vgtcinsertpkg

%% In preprint mode you may define your own headline.
%\preprinttext{To appear in IEEE Transactions on Visualization and Computer Graphics.}

%% Paper title.

\title{Communications at DinoFun World}

%% This is how authors are specified in the journal style

%% indicate IEEE Member or Student Member in form indicated below
\author{Heike Hofmann, \textit{Member, IEEE}, Dianne Cook, Andee Kaplan, Eric Hare, Vianey Leos-Barajas, \\Carson Sievert and Samantha Tyner}
\authorfooter{
%% insert punctuation at end of each item
\item
 Heike Hofmann, Andee Kaplan, Eric Hare, Vianey  Leos-Barajas, Carson Sievert and Samatha Tyner are with the Department of Statistics, Iowa State University. E-mail: \{hofmann, ajkaplan, erichare, vianey, csievert, sctyner\}@iastate.edu.
\item
 Dianne Cook is with the Department of Econometrics and Business Statistics, Monash University. E-mail: dicook@monash.edu.
 }

%other entries to be set up for journal
\shortauthortitle{Hofmann \MakeLowercase{\textit{et al.}}: Communications}
%\shortauthortitle{Firstauthor \MakeLowercase{\textit{et al.}}: Paper Title}

% %% Abstract section.
% \abstract{Here goes the abstract.
% } % end of abstract

%% Keywords that describe your work. Will show as 'Index Terms' in journal
%% please capitalize first letter and insert punctuation after last keyword
\keywords{Keywords that describe your work. Will show as 'Index Terms' in journal
 please capitalize first letter and insert punctuation after last keyword}

%% ACM Computing Classification System (CCS).
%% See <http://www.acm.org/class/1998/> for details.
%% The ``\CCScat'' command takes four arguments.

\CCScatlist{ % not used in journal version
 \CCScat{K.6.1}{Management of Computing and Information Systems}%
{Project and People Management}{Life Cycle};
 \CCScat{K.7.m}{The Computing Profession}{Miscellaneous}{Ethics}
}




%% Uncomment below to include a teaser figure.
   \teaser{
    \centering
    \includegraphics[width=.75\linewidth]{figure/omni-1.pdf}
\caption{\label{fig:overview} Number of messages sent from different locations in the park at each minute of the day. In color, we see the two park systems in action: the park's help line (shown in orange) gets very busy twice on Sunday, once at 11 am, and once at 3 pm. Points in green are trivia questions sent out at five minute intervals to park goers by the DinoFun World app. About a quarter of park goers opts to get these questions. The Scott Jones shows at 10-11 am each day and 3-4 pm on Friday and Saturday creates a dip in the number of messages, which is particularly strongly pronounced in the Wet Land area. The flare-ups in the number of messages sent from  Coaster Alley are related to park-goers sending messages as they are filing out of the Scott Jones show, while the spike of messages from the Wet Land is triggered by the discovery of the act of vandalism.
}

  }

%% Uncomment below to disable the manuscript note
%\renewcommand{\manuscriptnotetxt}{}

%% Copyright space is enabled by default as required by guidelines.
%% It is disabled by the 'review' option or via the following command:
% \nocopyrightspace

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%% START OF THE PAPER %%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}

%% The ``\maketitle'' command must be the first command after the
%% ``\begin{document}'' command. It prepares and prints the title block.

%% the only exception to this rule is the \firstsection command
\firstsection{Two Park Systems in Action}
\maketitle


<<setup, cache=FALSE, echo=FALSE, results='hide', message=FALSE, warning=FALSE>>=
library(readr)
library(lubridate)
library(dplyr)
library(ggplot2)
library(jpeg)
library(scales) 
library(ggmap)
library(grid)
library(RColorBrewer)
@

<<readdata, cache=TRUE, echo=FALSE, results='hide', message=FALSE, warning=FALSE>>=
fri <- read_csv("../data/comm-data-Fri.csv", col_types = list(
  Timestamp = col_character()))
sat <- read_csv("../data/comm-data-Sat.csv", col_types = list(
  Timestamp = col_character()))
sun <- read_csv("../data/comm-data-Sun.csv", col_types = list(
  Timestamp = col_character()))
com <- rbind(fri, sat, sun)
rm(fri, sat, sun)

com$Timestamp <- ymd_hms(com$Timestamp)
com$day <- wday(com$Timestamp, label=TRUE)
com$day <- factor(com$day, levels=c("Fri", "Sat", "Sun"))

mins <- com %>% group_by(day) %>% summarize(open=min(Timestamp))
minute(mins$open) <- 0
second(mins$open) <- 0
com <- merge(com, mins, by="day")

com <- com %>% group_by(day) %>% mutate(
  dsec = as.numeric(Timestamp-open)
  )

com$hour <- hour(com$Timestamp)
com$min <- minute(com$Timestamp)
com$dmin <- with(com, hour*60+min)

com <- com %>% group_by(Timestamp, from) %>% mutate(recipients=n())

dc <- subset(as.data.frame(xtabs(~dmin+location+day, data=com)), Freq > 0)
dc$dmin <- as.numeric(as.character(dc$dmin))
@

<<omni-data, dependson='readdata', echo=FALSE, cache=TRUE>>=
com$id <- "others"
com$id[com$from=="1278894"] <- 1278894
com$id[com$from=="839736"] <- 839736

com$back <- "others"
com$back[com$to=="839736"] <- 839736
com$back[com$to=="1278894"] <- 1278894

domni <- data.frame(xtabs(~id  + location + dmin + day, data=com))
domni$dmin <- as.numeric(as.character(domni$dmin))
@
Two IDs are notable for their large volume of messages: 1278894 and 839736. These IDs are responsible for almost 80\% of the message volume. Both these ids are stationary, sending messages from the Entry Corridor only. From the pattern of messages sent and received we are able to identify these ids as the park's help line (839736) and the Cindysaurus trivia game (1278894), which is part of the DinoFun World app (how do we cite the auxiliary file?):

During the even hours between noon and 8 pm questions are sent from the Cindysaurus trivia game (1278894) at five minute intervals  to just over 25\% of all park goers.
Judging from the large number of messages and the relatively low percentage of recipients this looks like an opt-in service.
Besides these questions exactly at the top of every five minutes there are no other messages from this id.
Almost all of the recipients quickly respond to each of the questions (while they wait in the very long lines).
%One potential scenario that we can think of is that the id is used for a (park-related?) trivia(?)  game to entertain park goers

Id 839736 on the other hand, has a very different pattern. Every single one of the messages sent from this id is solicited by a previous message by a park goer. On Friday and Saturday  about 85\% of all park goers make use of the park's help line, on Sunday this number spikes to 95\% of all park goers.

<<omni, dependson='omni-data', echo=FALSE, fig.width=12, fig.height=7, out.width='0.9\\columnwidth', cache=TRUE, results='asis', eval=FALSE>>=
qplot(dmin/60, Freq, data=subset(domni, id=="others"), geom=c("point", "line"), colour=I("grey60")) +
  facet_grid(facets=day~location, scale="free_y", space="free_y") +
  geom_line(aes(colour=id, group=id), size=0.15, alpha=0.5, subset(domni, id!="others")) +
  geom_point(aes(colour=id), subset(domni, id!="others")) +
  ggtitle("Two park systems in action") +
  ylab("Number of messages sent by minute") + theme_bw() +
  scale_colour_brewer("sender's id", palette="Set2") +
  theme(legend.justification=c(1,1), legend.position=c(0.4,0.325), plot.margin=unit(c(0,0,0,0), units="cm")) +
  scale_x_continuous("Time of day", breaks=c(8,12,16,20), labels=c("8 am", "12 pm", "4 pm", "8 pm"))
#+
#  scale_x_continuous(breaks=8:24, labels=paste(c(8:12,1:12), c(rep("am", 4), rep("pm", 12), "am")))
@

%\end{figure}

The spikes at 10am, 11am, 3pm and 4pm are all related to Scott Jones sightings, who makes his way from the East entrance entering  Kiddie Land to Grinosaurus Stage in the Coaster Alley.
The spikes in the Wet Land area and the Entry Corridor between 10:30 am and 12 pm on Sunday are related to the unfortunate events surrounding Scott Jones.

\section{A scene worthwhile texting about}
At exactly 5 pm on Saturday a flurry of messages originates from the Kiddie Land. Who is texting and why? 
Figure~\ref{fig:map} shows a map of the park overlaid by all of the park's 5m x 5m cells covered by censors along the park's pathways (in light yellow). Orange points show the location at which messages originated, their size indicates the number of messages. 
Figure~\ref{fig:net} gives an overview of who is texting whom -- as the flower-like shapes in the network indicate, most of the 1000 text messages are sent from just a few senders, but groups are not operating in total isolation; they are linked through some individuals, who either get messages from two sources, or pass on messages from one group to the other. The DinoFun Park app's friending service is definitely used!
<<kiddies-data, echo=FALSE, warning=FALSE, message=FALSE, results='hide', cache=TRUE>>=
# two flare-ups: one at 12:00, one at 12:30
# qplot(dmin, Freq, data=subset(dc, location=="Kiddie Land" & hour==12))
# qplot(dmin, Freq, data=subset(dc, location=="Kiddie Land" & hour==17), colour=day)
library(jpeg)
park <- readJPEG("../extra/Park Map.jpg")
library(ggmap)

alignTime <- function(moves, comms) {
  movfri <- moves[,c("Timestamp", "id", "type", "X", "Y")]
  comfri <- comms[, c("Timestamp", "from", "to", "location")]
  movfri$to <- NA
  movfri$location <- NA
  
  names(comfri)[2] <- "id"
  comfri$X <- NA
  comfri$Y <- NA
  comfri$type <- "send"
  
  allfri <- rbind(movfri, comfri)
  allfri <- allfri[order(allfri$id, allfri$Timestamp),]
  allfri$day <- wday(allfri$Timestamp, label=TRUE)
  allfri <- allfri %>% group_by(day) %>% mutate(
    dsec = as.numeric(Timestamp-min(Timestamp))
  )
  allfri$cid <- paste(allfri$id, allfri$dsec)
  
  allfri$X2 <- allfri$X
  allfri$Y2 <- allfri$Y
  idx <- which(is.na(allfri$X2))
  # substitute all locations for messages with 50 or fewer recipients
  for (i in 1:50) {
    allfri$X2[idx] <- allfri$X2[idx-1]
    allfri$Y2[idx] <- allfri$Y2[idx-1]
    
  }
  
  # different approach: identify all runs, substitute the location with the minimum-1 of the run
  didx <- diff(idx)
  leads <- c(0, which(didx > 1)) + 1
  ends <- c(which(didx > 1), length(idx))
  
  perc <- 0
  allfri$X3 <- allfri$X2
  allfri$Y3 <- allfri$Y2
  for (i in 1:length(leads)) {
    allfri$X3[idx[leads[i]]:idx[ends[i]]] <- allfri$X2[idx[leads[i]]-1]
    allfri$Y3[idx[leads[i]]:idx[ends[i]]] <- allfri$Y2[idx[leads[i]]-1]
  }
  
  allfri$X <- allfri$X3
  allfri$Y <- allfri$Y3
  subset(allfri, type=="send")
}


kiddies <- subset(com, location=="Kiddie Land" & dmin %in% 1020 & day=="Sat")
kiddies <- subset(kiddies, !(back %in% c("DinoFun App", "Park help-line", "external")))

fromto <- kiddies %>% group_by(from, to, day) %>% summarize(n=n())
fromto <- fromto %>% group_by(from) %>% mutate(nrec = n())
vertices <- data.frame(label=unique(c(fromto$from, fromto$to)))

dt <- table(kiddies$from)
topsenders <- names(dt)[dt > 5]
tos <- lapply(topsenders, function(x) c(x, unique(subset(kiddies, from==x)$to)))
# groups <- read.csv("../extra/groups.csv")
# names(groups)[1] <- "label"
# vertices <- merge(vertices, groups, by="label")
# vertices <- vertices %>% group_by(group) %>% mutate(groupsize=n())
cols <- c(brewer.pal(12, "Paired"), "#33A02C", "#006600", "#16547E", "#FF9933")
cols <- c(cols, rev(cols) )

vertices$col <- "#CCCCCC"
for (i in 1:length(tos)) {
  vertices$col[which(vertices$label %in% tos[[i]])] <- cols[i]
}
satmov <- read_csv("../data/park-movement-Sat.csv", col_types = list(
  Timestamp = col_character()))
satmov$Timestamp <- ymd_hms(satmov$Timestamp)
sensors <- unique(satmov[,c("X", "Y")])

kiddiesplus <- alignTime(satmov, kiddies)
kiddiesplus$min <- minute(kiddiesplus$Timestamp)
kiddiesplus$hour <- hour(kiddiesplus$Timestamp)
kiddiesplus$dmin <- with(kiddiesplus, hour*60+min)
kiddiesplus$second <- second(kiddiesplus$Timestamp)
kiddiesplus$dsec <- with(kiddiesplus, (hour*60+min)*60+second)
kiddiesplus$ddsec <- kiddiesplus$dsec %/% 15
kiddiesplus$ddsec <- factor(kiddiesplus$ddsec)

msgs <- kiddiesplus %>% group_by(X,Y, ddsec) %>% summarize(n=n())
levels(msgs$ddsec) <- c("0-14 secs", "15 - 29 secs", "30 - 44 secs", "45 - 59 secs")
@



\begin{figure}
\centering
<<kiddies-map, dependson='kiddies-data', echo=FALSE, fig.width=7, fig.height=7.25, out.width='0.8\\columnwidth', cache=TRUE>>=
ggimage(park, fullpage = FALSE) +
  geom_tile(aes(X*6.69,Y*6.74), data=sensors, fill="#FFFFCC", 
            colour="#FFFFEB", alpha=0.5) +
  theme(axis.text = element_blank(), axis.ticks=element_blank(),
        axis.title = element_blank(),
        plot.margin=unit(c(0,-.5,-1,-2), "line"),
        legend.background = element_rect(fill=alpha('white', 0.5))) +
    geom_point(aes(x=X*6.69, y=Y*6.74, size=n), colour="orange", alpha=0.8, 
               data=msgs) + 
  facet_wrap(~ddsec, nrow=2) +
  scale_size("# messages") + 
  ggtitle("News from the SabreTooth Theatre") +
  theme(legend.justification=c(1,0), legend.position=c(1,0))
@
\caption{\label{fig:map}Messages sent during the spike originating in the Kiddie Land. Maps at 15 second intervals show that some news-worthy event happened in front of the SabreTooth Theatre (location 64) triggering messages sent (in orange), from there people spread to the North and the South and then slowly dissipate.}
\end{figure}

\begin{figure}
\centering
<<kiddies-network, dependson='kiddies-data', echo=FALSE, fig.width=6, fig.height=6, out.width='0.7\\columnwidth', cache=TRUE>>=
set.seed(20150814)
ggplot(data=subset(fromto, nrec > 7),
       aes(from_id=from, to_id=to, ecolour="#888888")) + 
  geom_net(vertices=vertices, aes(vcolour=col, vsize=3)) + 
  xlim(c(0,1)) + ylim(c(0,1)) +theme_bw() + 
  theme(axis.ticks=element_blank(), axis.text=element_blank()) + 
  ggtitle("Network of messages sent from the Kiddie Land at 5:00 pm")
@
\caption{\label{fig:net}Network of messages sent from the Kiddie Land at 5 pm. Over 1,000 messages are sent by just a few individuals that make up a loosely connected network. }
\end{figure}

\section{A series of unfortunate events: who, when and where}

Figure~\ref{fig:towhom} shows the number of messages that originated from the Wet Land area by minute on Sunday between 11:00 am and 12:59 pm detailing the contributions of different groups to the peak in communication.
A tight group of 37 park goers is responsible for a first peak in messages around 11:30 - 11:45 am. This peak is made up of messages going forth-and-back between members of this group. The decrease in the number of messages among these guys goes hand-in-hand with a spike in messages to external recipients. This peak is immediately followed by a peak of messages right at noon spiking to over 1,500 messages to the park's help-line,  likely related to the closing of Creighton Pavilion for the remainder of the day. While messages to the help-line calm down again over the next half an hour, the help-line stays busier than on a regular day.

\begin{figure}
<<incrowd, echo=FALSE>>=
com$back <- "other park-goers"
com$back[com$to=="839736"] <- "Park help-line"
com$back[com$to=="1278894"] <- "DinoFun App"

peak <- subset(com, hour==11 & day=="Sun" & min >= 30 & min <= 44)
# exclude park help line and app
peak <- subset(peak, back %in% c("external", "other park-goers"))
peak <- subset(peak, id == "others")

dt <- table(peak$to)

#dt1 <- as.data.frame(table(peak$from))
#dt2 <- as.data.frame(table(nopeak$from))
#quantile(dt1$Freq, probs=c(90:100)/100)
#round(quantile(dt2$Freq, probs=c(90:100)/100))
# 90 percentile is about 45

x38 <- names(dt)[which(dt >= 250)]
@
\centering
<<towhom, dependson='incrowd', echo=FALSE, fig.width=7, fig.height=4.5, out.width='0.9\\columnwidth'>>=
com$back <- "other park-goers"
com$back[com$to=="839736"] <- "Park help-line"
com$back[com$to=="1278894"] <- "DinoFun App"
com$back[com$to %in% x38] <- "37 Penguins???"
com$back[com$to=="external"] <- "external"

domni <- data.frame(xtabs(~back  + location + dmin + day, data=com))
domni$dmin <- as.numeric(as.character(domni$dmin))
domni$hour <- domni$dmin %/% 60


qplot(dmin/60, y=Freq, data=subset(domni, day=="Sun" & location=="Wet Land" & hour %in% 11:12), geom=c("line"), facets=location~day, colour=back) +
  geom_point(size=3) +
xlab("Time of the day") + ylab("Number of total messages by minute") + theme_bw() +
  scale_colour_brewer("Recipient", palette="Set2") + theme(legend.position="bottom") +
  guides(colour = guide_legend(override.aes = list(alpha = 1),  nrow=2)) +
  scale_x_continuous(breaks=c(11, 11.5, 12, 12.5, 13), labels=c("11:00 am", "11:30 am", "12:00 pm", "12:30 pm", "13:00 pm")) +
  theme(plot.margin=unit(c(0,0,0,0), unit="cm")) +
  ggtitle("Who was sending messages?")
@
\caption{\label{fig:towhom} Zoom into communications out of the Wet Land area on Sunday between 11:00~am and 12:59~pm. Several sources contribute to the spikes in sent messages. }
\end{figure}

\begin{figure}
\centering
<<messages, echo=FALSE, fig.width=7, fig.height=4, out.width='0.9\\columnwidth'>>=
s38 <- subset(com, from %in% x38)
s38$from <- factor(s38$from)

ggplot(aes(x=dmin/60, y=from, colour=back), data=s38) +
  geom_jitter(data=subset(s38, back=="in-crowd"), size=1.5, position = position_jitter(height = .5)) +
  geom_point(size=1.5) +
  theme_bw() +
  ggtitle("Messages sent by the 37 `penguins'") +
  scale_colour_brewer("Recipient", palette="Set2") +
  theme(plot.margin=unit(c(0,0,0,0), "cm"), legend.position="bottom") +
  xlab("Time of day") +
  ylab("") +
  scale_x_continuous("Time of the day", breaks=c(9,12,15,18,21),
                    labels=c("9 am", "12 pm", "15 pm", "18 pm", "21 pm"))

@
\caption{\label{fig:messages} Messages sent from the 37 `penguins'. Between 11:30 and 11:45 am there is a flurry of messages among the members of the group.  About half of them take part in the Cindysaurus Trivia game. }
\end{figure}

<<x38-moves, echo=FALSE, message=FALSE, warning=FALSE, results="hide">>=
sunmov <- read_csv("../data/park-movement-Sun.csv", col_types = list(
  Timestamp = col_character()))
sunmov$Timestamp <- ymd_hms(sunmov$Timestamp)
sunmov$day <- wday(sunmov$Timestamp, label=TRUE)
sunmov$hour <- as.numeric(hour(sunmov$Timestamp))
sunmov$min <- as.numeric(minute(sunmov$Timestamp))

sunmov <- sunmov[order(sunmov$id,sunmov$Timestamp),]
sunmov$timespent <- c(as.numeric(diff(sunmov$Timestamp)), NA)
sunmov$timespent[sunmov$timespent < 0] <- NA

checkins <- subset(sunmov, type=="check-in")
m38 <- subset(sunmov, id %in% x38)
@

\begin{figure}
<<breaks, echo=FALSE>>=
moveplus <- sunmov[order(sunmov$day, sunmov$id, sunmov$Timestamp),]
moveplus$timespent <- c(as.numeric(diff(moveplus$Timestamp)), NA)
moveplus$timespent[moveplus$timespent < 0] <- NA

moves <- subset(moveplus, type == "movement")
# quantile(moves$timespent, probs=(990:1000)/1000, na.rm=TRUE)
breaks <- subset(moves, timespent > 30)
breaks$timespent <- breaks$timespent/60

parkX <- read.csv("../extra/park-xtd.csv")
breaks <- merge(subset(breaks, timespent > 10), parkX, by=c("X", "Y"), all=T)
breaks$dmin <- with(breaks, hour*60+min)

groups <- read.csv("../extra/groups.csv")

breaks <- merge(breaks, groups, by=c("id", "day"), all.x=TRUE)
breaks$id <- factor(breaks$id)
breaks$dmin <- with(breaks, (hour*60+min)/60)

checkinsgr <- merge(checkins, groups, by=c("id", "day"))
# checkinsgr <- read.csv("data/checkinsgr.csv")
# checkinsgr$Timestamp <- ymd_hms(checkinsgr$Timestamp)
checkinsgr$id <- reorder(checkinsgr$id, checkinsgr$group, mean)
# 
checkinsgr$dmin <- with(checkinsgr, (hour*60+min)/60)
checkinsgr <- merge(checkinsgr, parkX, by=c("X", "Y"), all=T)

@

\centering
<<x38, echo=FALSE, fig.width=7, fig.height=4.25, out.width='0.9\\columnwidth'>>=
#checkinsgr <- read.csv("../mc1/data/checkinsgr.csv")
#checkinsgr$Timestamp <- ymd_hms(checkinsgr$Timestamp)
#checkinsgr$id <- reorder(checkinsgr$id, checkinsgr$group, mean)

cols <- brewer.pal(12, "Paired")

checkinsgr$dmin <- with(checkinsgr, (hour*60+min)/60)
# checkinsgr$Name <- gsub("concert space", "Grinosaurus Stage", checkinsgr$Name)
# checkinsgr$Type <- gsub("concert space", "Shows & Entertainment", checkinsgr$Type)

qplot(x=dmin, xend=dmin+timespent/60^2, y=id, yend=id, data=subset(checkinsgr, day=="Sun" & group %in% c(2566)), colour=Type,geom="segment", size=I(3)) +  theme_bw() + scale_colour_manual(values=cols[c(3,4,11, 7,1,8)]) +
  ggtitle("Activities of the 37 `penguins'") + theme(legend.position="bottom") + ylab("") + guides(colour = guide_legend(nrow=2)) +
  geom_text(aes(x=dmin+timespent/(2*60^2), y=id, label=Name), colour="grey30", angle=90, data=subset(checkinsgr, id %in% c(1038892)), size=3.5) +
  theme(plot.margin=unit(c(0,0,0,0), "cm")) +
  scale_x_continuous("Time of the day", breaks=c(9,12,15,18,21),
                    labels=c("9 am", "12 pm", "15 pm", "18 pm", "21 pm")) +
  geom_segment(aes(x=dmin, xend=dmin+timespent/60, y=id, yend=id), 
               data=subset(breaks, timespent > 10 & day=="Sun" & 
                             group %in% c(2566)),
               colour="#DDDDDD", size=I(3)) +
  geom_text(aes(x=dmin+timespent/(2*60), y=id, label=Name), 
            colour="grey30", angle=90, size=3.5, 
            data=subset(breaks, id %in% c(1038892)))

@
\caption{\label{fig:x38} What is the group of `penguins' up to? These guys come into DinoFun World at around 9:30, but take their first ride after 12:30 pm - before that they spend a long time in or around Creighton Pavilion, however they never check into it! If they were not actively involved in the act of vandalism, they might have seen who was. }
\end{figure}


Interestingly, the sensors do not pick up on any movements for any one of the 37 members of the group between 9:45 until noon.
They are either standing perfectly still - like the penguins we've named them -  in the same 5m x 5m cell (tile 32, 33), or they found a hole in the park's sensor system and are on the loose somewhere around the Creighton Pavilion, into which they conveniently fail to check in (see figure~\ref{fig:x38}).


%' 
%' \begin{figure}
%' \centering
%' <<map-data, echo=FALSE, warning=FALSE, message=FALSE, results='hide'>>=
%' library(jpeg)
%' park <- readJPEG("../extra/Park Map.jpg")
%' library(ggmap)
%' @
%' <<map, dependson='map-data', echo=FALSE, fig.width=5, fig.height=5, out.width='.8\\columnwidth', message=FALSE, warning=FALSE>>=
%' lastmove <- m38 %>% filter(hour==9) %>% group_by(id) %>% summarize(
%'   when=max(Timestamp),
%'   waitX=X[which.max(Timestamp)],
%'   waitY=Y[which.max(Timestamp)])
%' 
%' firstmove <- m38 %>% filter(hour==12) %>% group_by(id) %>% summarize(
%'    when=min(Timestamp),
%'    waitX=X[which.min(Timestamp)],
%'    waitY=Y[which.min(Timestamp)])
%' 
%' 
%' ggimage(park, fullpage = FALSE) +
%'   geom_tile(aes(X*6.69,Y*6.74), data=sensors, fill="#FFFFCC", colour="#FFFFEB", alpha=0.5) +
%'   theme(axis.text = element_blank(), axis.ticks=element_blank(),
%'         axis.title = element_blank(),
%'         plot.margin=unit(c(0,0,-1,-1), "line")) +
%'     geom_point(aes(x=waitX*6.69, y=waitY*6.74), data=lastmove, colour="red") + geom_point(aes(x=waitX*6.69, y=waitY*6.74), data=firstmove, colour="orange") +
%'   ggtitle("The chaps of group 2566 disappear and re-appear")
%' 
%' @
%' \caption{\label{fig:map}Map of DinoFun World park. Sensors are keeping track of park-goers movements in cells $5m \times 5m$ along the park's pathways (overlaid in light yellow). The group of 37 chaps either stands like oil sardines for more than 2 hours in the cell marked by the red dot, or -- much more likely -- they are on the loose somewhere in the area around  Creighton Pavilion (building no.~32).}
%' \end{figure}
%' 

%% if specified like this the section will be committed in review mode
\acknowledgments{
The authors wish to thank everybody who makes the software R~\cite{R} possible, and in particular the authors of the packages knitr~\cite{knitr-package, knitr-book1}, ggplot2~\cite{ggplot2}, lubridate~\cite{lubridate} and dplyr~\cite{dplyr}.
}


%' <<messages-at-eleven, echo=FALSE>>=
%' coaster <- subset(com, day=="Sun" & dmin %in% 660:661)
%' 
%' coasterplus <- alignTime(sunmov, coaster)
%' coasterplus$min <- minute(coasterplus$Timestamp)
%' coasterplus$hour <- hour(coasterplus$Timestamp)
%' coasterplus$dmin <- with(coasterplus, hour*60+min)
%' coasterplus$second <- second(coasterplus$Timestamp)
%' coasterplus$dsec <- with(coasterplus, (hour*60+min)*60+second)
%' coasterplus$ddsec <- coasterplus$dsec %/% 15
%' 
%' msgs <- coasterplus %>% group_by(X,Y, ddsec) %>% summarize(n=n())
%' qplot(X,Y, size=n, data=msgs) + facet_wrap(~ddsec, nrow=2) + 
%'   theme(legend.position="bottom")
%' 
%' alignTime <- function(moves, comms) {
%'   movfri <- moves[,c("Timestamp", "id", "type", "X", "Y")]
%'   comfri <- comms[, c("Timestamp", "from", "to", "location")]
%'   movfri$to <- NA
%'   movfri$location <- NA
%'   
%'   names(comfri)[2] <- "id"
%'   comfri$X <- NA
%'   comfri$Y <- NA
%'   comfri$type <- "send"
%'   
%'   allfri <- rbind(movfri, comfri)
%'   allfri <- allfri[order(allfri$id, allfri$Timestamp),]
%'   allfri$day <- wday(allfri$Timestamp, label=TRUE)
%'   allfri <- allfri %>% group_by(day) %>% mutate(
%'     dsec = as.numeric(Timestamp-min(Timestamp))
%'   )
%'   allfri$cid <- paste(allfri$id, allfri$dsec)
%'   
%'   allfri$X2 <- allfri$X
%'   allfri$Y2 <- allfri$Y
%'   idx <- which(is.na(allfri$X2))
%'   # substitute all locations for messages with 50 or fewer recipients
%'   for (i in 1:50) {
%'     allfri$X2[idx] <- allfri$X2[idx-1]
%'     allfri$Y2[idx] <- allfri$Y2[idx-1]
%'     
%'   }
%'   
%'   # different approach: identify all runs, substitute the location with the minimum-1 of the run
%'   didx <- diff(idx)
%'   leads <- c(0, which(didx > 1)) + 1
%'   ends <- c(which(didx > 1), length(idx))
%'   
%'   perc <- 0
%'   allfri$X3 <- allfri$X2
%'   allfri$Y3 <- allfri$Y2
%'   for (i in 1:length(leads)) {
%'     allfri$X3[idx[leads[i]]:idx[ends[i]]] <- allfri$X2[idx[leads[i]]-1]
%'     allfri$Y3[idx[leads[i]]:idx[ends[i]]] <- allfri$Y2[idx[leads[i]]-1]
%'   }
%'   
%'   allfri$X <- allfri$X3
%'   allfri$Y <- allfri$Y3
%'   subset(allfri, type=="send")
%' }
%' @




\bibliographystyle{abbrv}
%%use following if all content of bibtex file should be shown
%\nocite{*}
\bibliography{mc2}
\end{document}

